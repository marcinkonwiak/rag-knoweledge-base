[project]
name = "server"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aiosqlite>=0.21.0",
    "asyncpg>=0.30.0",
    "fastapi-azure-auth>=5.1.1",
    "fastapi[standard]~=0.115.11",
    "greenlet>=3.1.1",
    "llama-index>=0.12.31",
    "llama-index-embeddings-google-genai>=0.1.0",
    "llama-index-llms-google-genai>=0.1.7",
    "llama-index-vector-stores-postgres>=0.4.2",
    "pgvector>=0.4.0",
    "psycopg2-binary>=2.9.10",
    "pydantic-ai[logfire]>=0.0.41",
    "pydantic-settings>=2.8.1",
    "python-dotenv>=1.0.1",
    "sqlalchemy>=2.0.39",
]

[dependency-groups]
dev = [
    "basedpyright>=1.28.4",
    "pytest>=8.3.5",
    "alembic>=1.15.1",
    "ruff>=0.11.4",
]

[tool.ruff]
target-version = "py313"
extend-exclude = ["**/migrations/*"]
[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C4", # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]

extend-ignore = [
    "B904", # Within an except clause, raise exceptions with ...
]

[tool.basedpyright]
include = ["src"]

exclude = ["**/migrations/*"]

typeCheckingMode = "recommended"
reportAny = false
reportExplicitAny = false
reportUnusedCallResult = false
reportImplicitOverride = false
reportUnannotatedClassAttribute = false
reportIgnoreCommentWithoutRule = false
reportUninitializedInstanceVariable = false
reportImportCycles = false
reportMissingTypeStubs = false
